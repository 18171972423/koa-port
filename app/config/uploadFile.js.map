{"version":3,"sources":["../../src/config/uploadFile.js"],"names":["inspect","require","path","os","fs","Busboy","mkdirsSync","dirname","existsSync","mkdirSync","getSuffixName","fileName","nameList","split","length","uploadFile","ctx","options","req","res","busboy","headers","fileType","filePath","join","mkdirResult","console","log","resolve","reject","result","success","formData","on","fieldname","file","filename","encoding","mimetype","Math","random","toString","substr","_uploadFilePath","saveTo","pipe","createWriteStream","message","val","fieldnameTruncated","valTruncated","err","module","exports"],"mappings":"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","file":"uploadFile.js","sourcesContent":["const inspect = require('util').inspect\nconst path = require('path')\nconst os = require('os')\nconst fs = require('fs')\nconst Busboy = require('busboy')\n\n/**\n * 同步创建文件目录\n * @param  {string} dirname 目录绝对地址\n * @return {boolean}        创建目录结果\n */\nfunction mkdirsSync( dirname ) {\n  if (fs.existsSync( dirname )) {\n    return true\n  } else {\n    if (mkdirsSync( path.dirname(dirname)) ) {\n      fs.mkdirSync( dirname )\n      return true\n    }\n  }\n}\n\n/**\n * 获取上传文件的后缀名\n * @param  {string} fileName 获取上传文件的后缀名\n * @return {string}          文件后缀名\n */\nfunction getSuffixName( fileName ) {\n  let nameList = fileName.split('.')\n  return nameList[nameList.length - 1]\n}\n\n/**\n * 上传文件\n * @param  {object} ctx     koa上下文\n * @param  {object} options 文件上传参数 fileType文件类型， path文件存放路径\n * @return {promise}         \n */\nfunction uploadFile( ctx, options) {\n  let req = ctx.req\n  let res = ctx.res\n  let busboy = new Busboy({headers: req.headers})\n  \n  // 获取类型\n  let fileType = options.fileType || 'common'\n  let filePath = path.join( options.path,  fileType)\n  \n  let mkdirResult = mkdirsSync( filePath )\n  console.log(mkdirResult)\n  return new Promise((resolve, reject) => {\n    console.log('文件上传中...')\n    let result = { \n      success: false,\n      formData: {},\n    }\n\n    // 解析请求文件事件\n    busboy.on('file', function(fieldname, file, filename, encoding, mimetype) {\n      let fileName = Math.random().toString(16).substr(2) + '.' + getSuffixName(filename)\n      let _uploadFilePath = path.join( filePath, fileName )\n      let saveTo = path.join(_uploadFilePath)\n\n      // 文件保存到制定路径\n      file.pipe(fs.createWriteStream(saveTo))\n\n      // 文件写入事件结束\n      file.on('end', function() {\n        result.success = true\n        result.message = '文件上传成功'\n\n        console.log('文件上传成功！')\n        resolve(result)\n      })\n    })\n\n    // 解析表单中其他字段信息\n    busboy.on('field', function(fieldname, val, fieldnameTruncated, valTruncated, encoding, mimetype) {\n      console.log('表单字段数据 [' + fieldname + ']: value: ' + inspect(val));\n      result.formData[fieldname] = inspect(val);\n    });\n\n    // 解析结束事件\n    busboy.on('finish', function( ) {\n      console.log('文件上结束')\n      resolve(result)\n    })\n\n    // 解析错误事件\n    busboy.on('error', function(err) {\n      console.log('文件上出错')\n      reject(result)\n    })\n\n    req.pipe(busboy)\n  })\n\n} \n\n\nmodule.exports =  {\n  uploadFile\n}"]}